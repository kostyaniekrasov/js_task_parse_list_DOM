{"mappings":"ACEA,IAAM,EAAe,SAAS,aAAa,CAAC,MACtC,EAAY,MAAM,IAAI,CAAC,EAAa,QAAQ,EAGhD,EAAU,IAAI,CAAC,SAAC,CAAA,CAAG,CAAnB,EACE,IAAM,EAAU,WACd,EAAE,YAAY,CAAC,eAAe,OAAO,CAAC,QAAS,KAMjD,OAAO,AAJS,WACd,EAAE,YAAY,CAAC,eAAe,OAAO,CAAC,QAAS,KAGhC,CACnB,GAEA,EAAU,OAAO,CAAC,SAAC,CAAnB,EAAgC,OAAA,EAAa,WAAW,CAAC,E,GAIlD,EAAU,GAAG,CAAC,SAAC,CAAtB,EAAoC,MAAA,CAClC,KAAM,EAAS,WAAW,CAC1B,SAAU,EAAS,YAAY,CAAC,iBAChC,OAAQ,EAAS,YAAY,CAAC,eAC9B,IAAK,EAAS,YAAY,CAAC,WAC7B,C","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar employeeList = document.querySelector(\"ul\");\nvar employees = Array.from(employeeList.children);\nvar sortEmloyeeList = function() {\n    employees.sort(function(a, b) {\n        var salaryA = parseFloat(a.getAttribute(\"data-salary\").replace(/[$,]/g, \"\"));\n        var salaryB = parseFloat(b.getAttribute(\"data-salary\").replace(/[$,]/g, \"\"));\n        return salaryB - salaryA;\n    });\n    employees.forEach(function(employee) {\n        return employeeList.appendChild(employee);\n    });\n};\nvar getEmployeeArray = function() {\n    return employees.map(function(employee) {\n        return {\n            name: employee.textContent,\n            position: employee.getAttribute(\"data-position\"),\n            salary: employee.getAttribute(\"data-salary\"),\n            age: employee.getAttribute(\"data-age\")\n        };\n    });\n};\nsortEmloyeeList();\ngetEmployeeArray();\n\n//# sourceMappingURL=index.bb1fa477.js.map\n","'use strict';\n\nconst employeeList = document.querySelector('ul');\nconst employees = Array.from(employeeList.children);\n\nconst sortEmloyeeList = () => {\n  employees.sort((a, b) => {\n    const salaryA = parseFloat(\n      a.getAttribute('data-salary').replace(/[$,]/g, ''),\n    );\n    const salaryB = parseFloat(\n      b.getAttribute('data-salary').replace(/[$,]/g, ''),\n    );\n\n    return salaryB - salaryA;\n  });\n\n  employees.forEach((employee) => employeeList.appendChild(employee));\n};\n\nconst getEmployeeArray = () => {\n  return employees.map((employee) => ({\n    name: employee.textContent,\n    position: employee.getAttribute('data-position'),\n    salary: employee.getAttribute('data-salary'),\n    age: employee.getAttribute('data-age'),\n  }));\n};\n\nsortEmloyeeList();\ngetEmployeeArray();\n"],"names":["employeeList","document","querySelector","employees","Array","from","children","sort","a","b","salaryA","parseFloat","getAttribute","replace","salaryB","forEach","employee","appendChild","map","name","textContent","position","salary","age"],"version":3,"file":"index.bb1fa477.js.map"}