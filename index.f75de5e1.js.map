{"mappings":"AAAA;AAEA,MAAM,eAAe,SAAS,aAAa,CAAC;AAC5C,MAAM,YAAY,MAAM,IAAI,CAAC,aAAa,QAAQ;AAElD,MAAM,kBAAkB;IACtB,UAAU,IAAI,CAAC,CAAC,GAAG;QACjB,MAAM,UAAU,WACd,EAAE,YAAY,CAAC,eAAe,OAAO,CAAC,SAAS;QAEjD,MAAM,UAAU,WACd,EAAE,YAAY,CAAC,eAAe,OAAO,CAAC,SAAS;QAGjD,OAAO,UAAU;IACnB;IAEA,UAAU,OAAO,CAAC,CAAC,WAAa,aAAa,WAAW,CAAC;AAC3D;AAEA,MAAM,mBAAmB;IACvB,OAAO,UAAU,GAAG,CAAC,CAAC,WAAc,CAAA;YAClC,MAAM,SAAS,WAAW;YAC1B,UAAU,SAAS,YAAY,CAAC;YAChC,QAAQ,SAAS,YAAY,CAAC;YAC9B,KAAK,SAAS,YAAY,CAAC;QAC7B,CAAA;AACF;AAEA;AAEA","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\nconst employeeList = document.querySelector('ul');\nconst employees = Array.from(employeeList.children);\n\nconst sortEmloyeeList = () => {\n  employees.sort((a, b) => {\n    const salaryA = parseFloat(\n      a.getAttribute('data-salary').replace(/[$,]/g, ''),\n    );\n    const salaryB = parseFloat(\n      b.getAttribute('data-salary').replace(/[$,]/g, ''),\n    );\n\n    return salaryB - salaryA;\n  });\n\n  employees.forEach((employee) => employeeList.appendChild(employee));\n};\n\nconst getEmployeeArray = () => {\n  return employees.map((employee) => ({\n    name: employee.textContent,\n    position: employee.getAttribute('data-position'),\n    salary: employee.getAttribute('data-salary'),\n    age: employee.getAttribute('data-age'),\n  }));\n};\n\nsortEmloyeeList();\n\ngetEmployeeArray();\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}